% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fct_utils.R
\name{expand_columns}
\alias{expand_columns}
\title{Expand columns}
\usage{
expand_columns(
  data,
  columns,
  separator = ",",
  unite_with = NULL,
  remove_cols = FALSE
)
}
\arguments{
\item{data}{A data frame to use.}

\item{columns}{Character vector containing the names of the columns that will be used for the expansion of the data frame.}

\item{separator}{Character vector, containing the separator that is used to distinguish
different elements in the list columns.}

\item{unite_with}{Character string. Name of}

\item{remove_cols}{A logical, indicating if the columns need to be removed
from the data set after expansion. Will be ignored if \code{unite_with} is \code{NULL},
to ensure that the information in \code{columns} is not lost. Can be a vector of logicals if multiple \code{columns} are used for expansion.}
}
\value{
A data frame that usually will be longer than the original one.
}
\description{
Function to expand list columns into additional rows.
}
\examples{
 df <- head(iris, n = 6) |> 
  dplyr::mutate(
    expansion_1 = list("feature.1, feature.2"), 
    expansion_2 = list("group.1, group.2")
    )
    
 # expand the data frame with the values in columns "expansion_1" and "expansion_2":
  expand_columns(df, c("expansion_1", "expansion_2"))

# You can also unite the values in the expansion columns with any column in the data frame, 
# and remove column "expansion_1" but keep column "expansion_2" afterwards:
expand_columns(df, c("expansion_1", "expansion_2"),  
  unite_with = "Species", remove_cols = c(TRUE, FALSE))

}
\keyword{internal}
